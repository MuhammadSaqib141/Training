docker run -d \
  --name mongodb \
  -e MONGO_INITDB_ROOT_USERNAME=admin \
  -e MONGO_INITDB_ROOT_PASSWORD=secret \
  -p 27017:27017 \
  mongo
  
  
docker exec -it mongodb mongosh --username admin --password secret --authenticationDatabase admin

___________________________________________________________________________________________________________
        
        OTHER THEN ABOVE SOLUTION, COMMANDS i used to play in mongodb container
___________________________________________________________________________________________________________



docker pull mongodb
docker run -d --name mongo_container -p 27017:27017 mongo
//port mapping to extract container from locla machibe 
mongo --host localhost --port 27017



 docker run -d --name some-mongo \
	-e MONGO_INITDB_ROOT_USERNAME=mongoadmin \
	-e MONGO_INITDB_ROOT_PASSWORD=secret \
	mongo
	
docker run -d \
  --name mongodb \
  -e MONGO_INITDB_ROOT_USERNAME=admin \
  -e MONGO_INITDB_ROOT_PASSWORD=secret \
  -p 27017:27017 \
  mongo
  
  
docker exec -it mongodb mongosh --username admin --password secret --authenticationDatabase admin




docker exec -it mongo_container mongosh --username multiDBUser --password securePassword --authenticationDatabase admin





docker exec -it mongodb mongosh --username admin --password secret --authenticationDatabase admin // root user
__________________________________________
use myDatabase; // Switch to the desired database

db.createUser({
  user: "newUser",
  pwd: "newPassword",
  roles: [ { role: "readWrite", db: "myDatabase" } ]
});

use admin;
db.getUsers();


___________________________________
mongo dbs commands:
show dbs
use _____
show collections
db.createCollection("myCollection")
	db.myCollection.insertOne({ name: "Alice", age: 30 })
db.myCollection.insertMany([
    { name: "Bob", age: 25 },
    { name: "Charlie", age: 35 }
])
db.myCollection.find()
db.myCollection.find({ age: { $gt: 30 } })  
db.myCollection.deleteOne({ name: "Alice" })
db.myCollection.deleteMany({ age: { $lt: 30 } })
db.myCollection.drop()


_________________________________________________
User Profile

db.getUsers()
db.runCommand({ connectionStatus: 1 })

use admin
db.system.users.find().pretty()
______________________________________
Add new user
db.createUser({
    user: "newUser",
    pwd: "password123",
    roles: [ { role: "readWrite", db: "myDatabase" } ]
})
__________________________________________________


db.createUser({
    user: "newUser",
    pwd: "password123",
    roles: [ { role: "readWrite", db: "myDatabase" } ]
})


db.auth("username", "password")


use myDatabase
db.getUsers()


db.createUser({
    user: "multiDBUser",
    pwd: "securePassword",
    roles: [
        { role: "readWrite", db: "database1" },
        { role: "read", db: "database2" }
    ]
})
